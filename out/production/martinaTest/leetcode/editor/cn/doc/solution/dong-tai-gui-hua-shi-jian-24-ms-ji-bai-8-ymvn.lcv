> Problem: [1312. 让字符串成为回文串的最少插入次数](https://leetcode.cn/problems/minimum-insertion-steps-to-make-a-string-palindrome/description/)

[TOC]

# 思路

> 动态规划

# 解题方法

> 数组dp[i][j]表示字符串s第i位至第j位子串转变为回文串的最小插入次数。可得递推公式：if(s[j]==s[j+i]){
> if(i==1){
> dp[j][j+i]=0;
> }
> else{
> dp[j][j+i]=dp[j+1][j+i-1];
> }
> }
> else{
> dp[j][j+i]=min(dp[j+1][j+i]+1,dp[j][j+i-1]+1);
> }

# 复杂度

- 时间复杂度:

> $O(n^2)$

- 空间复杂度:

> $O(n^2)$

# Code

* []

```C++

class Solution {
public:
    int minInsertions(string s) {
        int dp[s.length()][s.length()];
        for(int i=0;i<s.length();i++){
            dp[i][i]=0;
        }
        for(int i=1;i<s.length();i++){
            for(int j=0;j+i<s.length();j++){
                if(s[j]==s[j+i]){
                    if(i==1){
                        dp[j][j+i]=0;
                    }
                    else{
                        dp[j][j+i]=dp[j+1][j+i-1];
                    }
                }
                else{
                    dp[j][j+i]=min(dp[j+1][j+i]+1,dp[j][j+i-1]+1);
                }
            }
        }
        return dp[0][s.length()-1];
    }
};
```

