> Problem: [438. 找到字符串中所有字母异位词](https://leetcode.cn/problems/find-all-anagrams-in-a-string/description/)

[TOC]

# 思路

滑动窗口+hash

# 解题方法

当滑动窗口内字符串hash计数超过p串hash计数，就调整窗口
这个窗口调整条件**包含了所有可能出现的情况**,
**本质都是某字符数量超了**
1）p中没有的字符c，调整left，直到不包括这个字符
2）p中有字符c但没那么多个，调整left，直到数量合理

若滑动窗口大小cnt == p.size()，记录答案
记录答案后不需要对窗口进行处理，在下一个循环中，会由于某个字符数量超了，再次进行调整。

# Code

* []

```C++
class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
        vector<int> res;
        unordered_map<char, int> hashp, hashs;
        int n = s.size();
        //记录p串各字符出现次数
        for(int i = 0; i < p.size(); i++){
            hashp[p[i]]++;
        }
        int left = 0, right = 0;
        int cnt = 0;
        while(right < n){
            //扩展窗口
            char c = s[right];
            hashs[c]++;
            cnt++;
            right++;
            //调整窗口
            while(hashs[c] > hashp[c]){
                hashs[s[left]]--;
                left++;
                cnt--;
            }
            //记录答案
            if(cnt == p.size()){
                res.push_back(left);
            }
        }
        return res;
    }
};
```

