class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        int n = nums.length;
        // 共二层循环
        // 第一层循环
        for (int i = 0; i < n; i++) {
            //注意去重
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int j = i + 1, k = n - 1;
            // 二层循环
            while (j < k) {
                // 注意去重
                while (j > i + 1 && j < n && nums[j] == nums[j - 1]) {
                    j++;
                }
                // 注意要判断二层循环是否溢出
                if (j >= k) {
                    break;
                }
                int sum = nums[i] + nums[j] + nums[k];
                if (sum == 0) {
                    res.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    j++;
                } else if (sum < 0) {
                    j++;
                } else if (sum > 0) {
                    k--;
                }
            }
        }
        return res;
    }
}

//runtime:28 ms
//memory:46.4 MB
