### 解题思路

此处撰写解题思路

### 代码

* python

```python
class Solution(object):
    def lengthOfLIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """

        #状态定义：dp[i] 为以nums[i]为到i位置时且需要选中nums[i]的最长递增子序列的长度
        #状态转移方程：对历史所有<nums[i]的位置，获取最大的长度再+1，作为dp[i]

        if not nums:
            return 0 

        dp = []
        res = 1

        for i in range(len(nums)):
            dp.append(1)
            for j in range(i):
                if nums[i] > nums[j]:
                    dp[i] = max(dp[i] , dp[j] + 1)
            if dp[i] > res:
                res = dp[i]
        return res

        

                
```

